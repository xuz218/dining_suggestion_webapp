"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerifiedAttributeType = exports.ForbiddenException = exports.ConcurrentModificationException = exports.AliasAttributeType = exports.AdvancedSecurityModeType = exports.DeviceRememberedStatusType = exports.SoftwareTokenMFANotFoundException = exports.ExpiredCodeException = exports.CodeMismatchException = exports.InvalidEmailRoleAccessPolicyException = exports.UserPoolAddOnNotEnabledException = exports.EventType = exports.RiskLevelType = exports.RiskDecisionType = exports.EventResponseType = exports.FeedbackValueType = exports.ChallengeResponse = exports.ChallengeName = exports.UserNotConfirmedException = exports.PasswordResetRequiredException = exports.MFAMethodNotFoundException = exports.ChallengeNameType = exports.AuthFlowType = exports.InvalidUserPoolConfigurationException = exports.AliasExistsException = exports.UsernameExistsException = exports.UnsupportedUserStateException = exports.PreconditionNotMetException = exports.InvalidSmsRoleTrustRelationshipException = exports.InvalidSmsRoleAccessPolicyException = exports.InvalidPasswordException = exports.CodeDeliveryFailureException = exports.UserStatusType = exports.MessageActionType = exports.DeliveryMediumType = exports.UserLambdaValidationException = exports.UnexpectedLambdaException = exports.TooManyFailedAttemptsException = exports.LimitExceededException = exports.InvalidLambdaResponseException = exports.UserNotFoundException = exports.UserImportInProgressException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.NotAuthorizedException = exports.InvalidParameterException = exports.InternalErrorException = exports.AttributeDataType = exports.AccountTakeoverEventActionType = exports.RecoveryOptionNameType = void 0;
exports.AdminListGroupsForUserRequestFilterSensitiveLog = exports.AdminListDevicesResponseFilterSensitiveLog = exports.AdminListDevicesRequestFilterSensitiveLog = exports.AdminInitiateAuthResponseFilterSensitiveLog = exports.AuthenticationResultTypeFilterSensitiveLog = exports.AdminInitiateAuthRequestFilterSensitiveLog = exports.AdminGetUserResponseFilterSensitiveLog = exports.AdminGetUserRequestFilterSensitiveLog = exports.AdminGetDeviceResponseFilterSensitiveLog = exports.DeviceTypeFilterSensitiveLog = exports.AdminGetDeviceRequestFilterSensitiveLog = exports.AdminForgetDeviceRequestFilterSensitiveLog = exports.AdminEnableUserRequestFilterSensitiveLog = exports.AdminDisableUserRequestFilterSensitiveLog = exports.AdminDeleteUserAttributesRequestFilterSensitiveLog = exports.AdminDeleteUserRequestFilterSensitiveLog = exports.AdminCreateUserResponseFilterSensitiveLog = exports.UserTypeFilterSensitiveLog = exports.AdminCreateUserRequestFilterSensitiveLog = exports.AttributeTypeFilterSensitiveLog = exports.AdminConfirmSignUpRequestFilterSensitiveLog = exports.AdminAddUserToGroupRequestFilterSensitiveLog = exports.UnsupportedTokenTypeException = exports.UnsupportedOperationException = exports.UnauthorizedException = exports.LogLevel = exports.EventSourceName = exports.DomainStatusType = exports.EventFilterType = exports.CompromisedCredentialsEventActionType = exports.UnsupportedIdentityProviderException = exports.ScopeDoesNotExistException = exports.InvalidOAuthFlowException = exports.TimeUnitsType = exports.PreventUserExistenceErrorTypes = exports.ExplicitAuthFlowsType = exports.OAuthFlowType = exports.UserPoolTaggingException = exports.StatusType = exports.DefaultEmailOptionType = exports.UsernameAttributeType = exports.UserPoolMfaType = exports.CustomSMSSenderLambdaVersionType = exports.CustomEmailSenderLambdaVersionType = exports.EmailSendingAccountType = exports.DeletionProtectionType = exports.UserImportJobStatusType = exports.DuplicateProviderException = exports.IdentityProviderTypeType = exports.GroupExistsException = void 0;
exports.RespondToAuthChallengeRequestFilterSensitiveLog = exports.ResendConfirmationCodeRequestFilterSensitiveLog = exports.ListUsersInGroupResponseFilterSensitiveLog = exports.ListUsersResponseFilterSensitiveLog = exports.ListUserPoolClientsResponseFilterSensitiveLog = exports.UserPoolClientDescriptionFilterSensitiveLog = exports.ListDevicesResponseFilterSensitiveLog = exports.ListDevicesRequestFilterSensitiveLog = exports.InitiateAuthResponseFilterSensitiveLog = exports.InitiateAuthRequestFilterSensitiveLog = exports.GlobalSignOutRequestFilterSensitiveLog = exports.GetUserAttributeVerificationCodeRequestFilterSensitiveLog = exports.GetUserResponseFilterSensitiveLog = exports.GetUserRequestFilterSensitiveLog = exports.GetUICustomizationResponseFilterSensitiveLog = exports.UICustomizationTypeFilterSensitiveLog = exports.GetUICustomizationRequestFilterSensitiveLog = exports.GetDeviceResponseFilterSensitiveLog = exports.GetDeviceRequestFilterSensitiveLog = exports.ForgotPasswordRequestFilterSensitiveLog = exports.ForgetDeviceRequestFilterSensitiveLog = exports.DescribeUserPoolClientResponseFilterSensitiveLog = exports.DescribeUserPoolClientRequestFilterSensitiveLog = exports.DescribeRiskConfigurationResponseFilterSensitiveLog = exports.RiskConfigurationTypeFilterSensitiveLog = exports.DescribeRiskConfigurationRequestFilterSensitiveLog = exports.DeleteUserPoolClientRequestFilterSensitiveLog = exports.DeleteUserAttributesRequestFilterSensitiveLog = exports.DeleteUserRequestFilterSensitiveLog = exports.CreateUserPoolClientResponseFilterSensitiveLog = exports.UserPoolClientTypeFilterSensitiveLog = exports.ConfirmSignUpRequestFilterSensitiveLog = exports.ConfirmForgotPasswordRequestFilterSensitiveLog = exports.UserContextDataTypeFilterSensitiveLog = exports.ConfirmDeviceRequestFilterSensitiveLog = exports.ChangePasswordRequestFilterSensitiveLog = exports.AssociateSoftwareTokenResponseFilterSensitiveLog = exports.AssociateSoftwareTokenRequestFilterSensitiveLog = exports.AdminUserGlobalSignOutRequestFilterSensitiveLog = exports.AdminUpdateUserAttributesRequestFilterSensitiveLog = exports.AdminUpdateDeviceStatusRequestFilterSensitiveLog = exports.AdminUpdateAuthEventFeedbackRequestFilterSensitiveLog = exports.AdminSetUserSettingsRequestFilterSensitiveLog = exports.AdminSetUserPasswordRequestFilterSensitiveLog = exports.AdminSetUserMFAPreferenceRequestFilterSensitiveLog = exports.AdminRespondToAuthChallengeResponseFilterSensitiveLog = exports.AdminRespondToAuthChallengeRequestFilterSensitiveLog = exports.AdminResetUserPasswordRequestFilterSensitiveLog = exports.AdminRemoveUserFromGroupRequestFilterSensitiveLog = exports.AdminListUserAuthEventsRequestFilterSensitiveLog = void 0;
exports.SetRiskConfigurationRequestFilterSensitiveLog = exports.RevokeTokenRequestFilterSensitiveLog = exports.RespondToAuthChallengeResponseFilterSensitiveLog = void 0;
const smithy_client_1 = require("@smithy/smithy-client");
const CognitoIdentityProviderServiceException_1 = require("./CognitoIdentityProviderServiceException");
exports.RecoveryOptionNameType = {
    ADMIN_ONLY: "admin_only",
    VERIFIED_EMAIL: "verified_email",
    VERIFIED_PHONE_NUMBER: "verified_phone_number",
};
exports.AccountTakeoverEventActionType = {
    BLOCK: "BLOCK",
    MFA_IF_CONFIGURED: "MFA_IF_CONFIGURED",
    MFA_REQUIRED: "MFA_REQUIRED",
    NO_ACTION: "NO_ACTION",
};
exports.AttributeDataType = {
    BOOLEAN: "Boolean",
    DATETIME: "DateTime",
    NUMBER: "Number",
    STRING: "String",
};
class InternalErrorException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InternalErrorException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalErrorException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalErrorException.prototype);
    }
}
exports.InternalErrorException = InternalErrorException;
class InvalidParameterException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidParameterException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidParameterException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidParameterException.prototype);
    }
}
exports.InvalidParameterException = InvalidParameterException;
class NotAuthorizedException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "NotAuthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "NotAuthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, NotAuthorizedException.prototype);
    }
}
exports.NotAuthorizedException = NotAuthorizedException;
class ResourceNotFoundException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class TooManyRequestsException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "TooManyRequestsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyRequestsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyRequestsException.prototype);
    }
}
exports.TooManyRequestsException = TooManyRequestsException;
class UserImportInProgressException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserImportInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserImportInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserImportInProgressException.prototype);
    }
}
exports.UserImportInProgressException = UserImportInProgressException;
class UserNotFoundException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserNotFoundException.prototype);
    }
}
exports.UserNotFoundException = UserNotFoundException;
class InvalidLambdaResponseException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidLambdaResponseException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidLambdaResponseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidLambdaResponseException.prototype);
    }
}
exports.InvalidLambdaResponseException = InvalidLambdaResponseException;
class LimitExceededException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class TooManyFailedAttemptsException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "TooManyFailedAttemptsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TooManyFailedAttemptsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TooManyFailedAttemptsException.prototype);
    }
}
exports.TooManyFailedAttemptsException = TooManyFailedAttemptsException;
class UnexpectedLambdaException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnexpectedLambdaException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnexpectedLambdaException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnexpectedLambdaException.prototype);
    }
}
exports.UnexpectedLambdaException = UnexpectedLambdaException;
class UserLambdaValidationException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserLambdaValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserLambdaValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserLambdaValidationException.prototype);
    }
}
exports.UserLambdaValidationException = UserLambdaValidationException;
exports.DeliveryMediumType = {
    EMAIL: "EMAIL",
    SMS: "SMS",
};
exports.MessageActionType = {
    RESEND: "RESEND",
    SUPPRESS: "SUPPRESS",
};
exports.UserStatusType = {
    ARCHIVED: "ARCHIVED",
    COMPROMISED: "COMPROMISED",
    CONFIRMED: "CONFIRMED",
    FORCE_CHANGE_PASSWORD: "FORCE_CHANGE_PASSWORD",
    RESET_REQUIRED: "RESET_REQUIRED",
    UNCONFIRMED: "UNCONFIRMED",
    UNKNOWN: "UNKNOWN",
};
class CodeDeliveryFailureException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "CodeDeliveryFailureException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeDeliveryFailureException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeDeliveryFailureException.prototype);
    }
}
exports.CodeDeliveryFailureException = CodeDeliveryFailureException;
class InvalidPasswordException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidPasswordException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidPasswordException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidPasswordException.prototype);
    }
}
exports.InvalidPasswordException = InvalidPasswordException;
class InvalidSmsRoleAccessPolicyException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidSmsRoleAccessPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSmsRoleAccessPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSmsRoleAccessPolicyException.prototype);
    }
}
exports.InvalidSmsRoleAccessPolicyException = InvalidSmsRoleAccessPolicyException;
class InvalidSmsRoleTrustRelationshipException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidSmsRoleTrustRelationshipException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSmsRoleTrustRelationshipException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSmsRoleTrustRelationshipException.prototype);
    }
}
exports.InvalidSmsRoleTrustRelationshipException = InvalidSmsRoleTrustRelationshipException;
class PreconditionNotMetException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "PreconditionNotMetException",
            $fault: "client",
            ...opts,
        });
        this.name = "PreconditionNotMetException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PreconditionNotMetException.prototype);
    }
}
exports.PreconditionNotMetException = PreconditionNotMetException;
class UnsupportedUserStateException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedUserStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedUserStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedUserStateException.prototype);
    }
}
exports.UnsupportedUserStateException = UnsupportedUserStateException;
class UsernameExistsException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UsernameExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "UsernameExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UsernameExistsException.prototype);
    }
}
exports.UsernameExistsException = UsernameExistsException;
class AliasExistsException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "AliasExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "AliasExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AliasExistsException.prototype);
    }
}
exports.AliasExistsException = AliasExistsException;
class InvalidUserPoolConfigurationException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidUserPoolConfigurationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUserPoolConfigurationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUserPoolConfigurationException.prototype);
    }
}
exports.InvalidUserPoolConfigurationException = InvalidUserPoolConfigurationException;
exports.AuthFlowType = {
    ADMIN_NO_SRP_AUTH: "ADMIN_NO_SRP_AUTH",
    ADMIN_USER_PASSWORD_AUTH: "ADMIN_USER_PASSWORD_AUTH",
    CUSTOM_AUTH: "CUSTOM_AUTH",
    REFRESH_TOKEN: "REFRESH_TOKEN",
    REFRESH_TOKEN_AUTH: "REFRESH_TOKEN_AUTH",
    USER_PASSWORD_AUTH: "USER_PASSWORD_AUTH",
    USER_SRP_AUTH: "USER_SRP_AUTH",
};
exports.ChallengeNameType = {
    ADMIN_NO_SRP_AUTH: "ADMIN_NO_SRP_AUTH",
    CUSTOM_CHALLENGE: "CUSTOM_CHALLENGE",
    DEVICE_PASSWORD_VERIFIER: "DEVICE_PASSWORD_VERIFIER",
    DEVICE_SRP_AUTH: "DEVICE_SRP_AUTH",
    MFA_SETUP: "MFA_SETUP",
    NEW_PASSWORD_REQUIRED: "NEW_PASSWORD_REQUIRED",
    PASSWORD_VERIFIER: "PASSWORD_VERIFIER",
    SELECT_MFA_TYPE: "SELECT_MFA_TYPE",
    SMS_MFA: "SMS_MFA",
    SOFTWARE_TOKEN_MFA: "SOFTWARE_TOKEN_MFA",
};
class MFAMethodNotFoundException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "MFAMethodNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "MFAMethodNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MFAMethodNotFoundException.prototype);
    }
}
exports.MFAMethodNotFoundException = MFAMethodNotFoundException;
class PasswordResetRequiredException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "PasswordResetRequiredException",
            $fault: "client",
            ...opts,
        });
        this.name = "PasswordResetRequiredException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PasswordResetRequiredException.prototype);
    }
}
exports.PasswordResetRequiredException = PasswordResetRequiredException;
class UserNotConfirmedException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserNotConfirmedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserNotConfirmedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserNotConfirmedException.prototype);
    }
}
exports.UserNotConfirmedException = UserNotConfirmedException;
exports.ChallengeName = {
    Mfa: "Mfa",
    Password: "Password",
};
exports.ChallengeResponse = {
    Failure: "Failure",
    Success: "Success",
};
exports.FeedbackValueType = {
    INVALID: "Invalid",
    VALID: "Valid",
};
exports.EventResponseType = {
    Fail: "Fail",
    InProgress: "InProgress",
    Pass: "Pass",
};
exports.RiskDecisionType = {
    AccountTakeover: "AccountTakeover",
    Block: "Block",
    NoRisk: "NoRisk",
};
exports.RiskLevelType = {
    High: "High",
    Low: "Low",
    Medium: "Medium",
};
exports.EventType = {
    ForgotPassword: "ForgotPassword",
    PasswordChange: "PasswordChange",
    ResendCode: "ResendCode",
    SignIn: "SignIn",
    SignUp: "SignUp",
};
class UserPoolAddOnNotEnabledException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserPoolAddOnNotEnabledException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserPoolAddOnNotEnabledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserPoolAddOnNotEnabledException.prototype);
    }
}
exports.UserPoolAddOnNotEnabledException = UserPoolAddOnNotEnabledException;
class InvalidEmailRoleAccessPolicyException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidEmailRoleAccessPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEmailRoleAccessPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEmailRoleAccessPolicyException.prototype);
    }
}
exports.InvalidEmailRoleAccessPolicyException = InvalidEmailRoleAccessPolicyException;
class CodeMismatchException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "CodeMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "CodeMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CodeMismatchException.prototype);
    }
}
exports.CodeMismatchException = CodeMismatchException;
class ExpiredCodeException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "ExpiredCodeException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExpiredCodeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExpiredCodeException.prototype);
    }
}
exports.ExpiredCodeException = ExpiredCodeException;
class SoftwareTokenMFANotFoundException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "SoftwareTokenMFANotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "SoftwareTokenMFANotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SoftwareTokenMFANotFoundException.prototype);
    }
}
exports.SoftwareTokenMFANotFoundException = SoftwareTokenMFANotFoundException;
exports.DeviceRememberedStatusType = {
    NOT_REMEMBERED: "not_remembered",
    REMEMBERED: "remembered",
};
exports.AdvancedSecurityModeType = {
    AUDIT: "AUDIT",
    ENFORCED: "ENFORCED",
    OFF: "OFF",
};
exports.AliasAttributeType = {
    EMAIL: "email",
    PHONE_NUMBER: "phone_number",
    PREFERRED_USERNAME: "preferred_username",
};
class ConcurrentModificationException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "ConcurrentModificationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConcurrentModificationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);
    }
}
exports.ConcurrentModificationException = ConcurrentModificationException;
class ForbiddenException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "ForbiddenException",
            $fault: "client",
            ...opts,
        });
        this.name = "ForbiddenException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ForbiddenException.prototype);
    }
}
exports.ForbiddenException = ForbiddenException;
exports.VerifiedAttributeType = {
    EMAIL: "email",
    PHONE_NUMBER: "phone_number",
};
class GroupExistsException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "GroupExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "GroupExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, GroupExistsException.prototype);
    }
}
exports.GroupExistsException = GroupExistsException;
exports.IdentityProviderTypeType = {
    Facebook: "Facebook",
    Google: "Google",
    LoginWithAmazon: "LoginWithAmazon",
    OIDC: "OIDC",
    SAML: "SAML",
    SignInWithApple: "SignInWithApple",
};
class DuplicateProviderException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "DuplicateProviderException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateProviderException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateProviderException.prototype);
    }
}
exports.DuplicateProviderException = DuplicateProviderException;
exports.UserImportJobStatusType = {
    Created: "Created",
    Expired: "Expired",
    Failed: "Failed",
    InProgress: "InProgress",
    Pending: "Pending",
    Stopped: "Stopped",
    Stopping: "Stopping",
    Succeeded: "Succeeded",
};
exports.DeletionProtectionType = {
    ACTIVE: "ACTIVE",
    INACTIVE: "INACTIVE",
};
exports.EmailSendingAccountType = {
    COGNITO_DEFAULT: "COGNITO_DEFAULT",
    DEVELOPER: "DEVELOPER",
};
exports.CustomEmailSenderLambdaVersionType = {
    V1_0: "V1_0",
};
exports.CustomSMSSenderLambdaVersionType = {
    V1_0: "V1_0",
};
exports.UserPoolMfaType = {
    OFF: "OFF",
    ON: "ON",
    OPTIONAL: "OPTIONAL",
};
exports.UsernameAttributeType = {
    EMAIL: "email",
    PHONE_NUMBER: "phone_number",
};
exports.DefaultEmailOptionType = {
    CONFIRM_WITH_CODE: "CONFIRM_WITH_CODE",
    CONFIRM_WITH_LINK: "CONFIRM_WITH_LINK",
};
exports.StatusType = {
    Disabled: "Disabled",
    Enabled: "Enabled",
};
class UserPoolTaggingException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UserPoolTaggingException",
            $fault: "client",
            ...opts,
        });
        this.name = "UserPoolTaggingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UserPoolTaggingException.prototype);
    }
}
exports.UserPoolTaggingException = UserPoolTaggingException;
exports.OAuthFlowType = {
    client_credentials: "client_credentials",
    code: "code",
    implicit: "implicit",
};
exports.ExplicitAuthFlowsType = {
    ADMIN_NO_SRP_AUTH: "ADMIN_NO_SRP_AUTH",
    ALLOW_ADMIN_USER_PASSWORD_AUTH: "ALLOW_ADMIN_USER_PASSWORD_AUTH",
    ALLOW_CUSTOM_AUTH: "ALLOW_CUSTOM_AUTH",
    ALLOW_REFRESH_TOKEN_AUTH: "ALLOW_REFRESH_TOKEN_AUTH",
    ALLOW_USER_PASSWORD_AUTH: "ALLOW_USER_PASSWORD_AUTH",
    ALLOW_USER_SRP_AUTH: "ALLOW_USER_SRP_AUTH",
    CUSTOM_AUTH_FLOW_ONLY: "CUSTOM_AUTH_FLOW_ONLY",
    USER_PASSWORD_AUTH: "USER_PASSWORD_AUTH",
};
exports.PreventUserExistenceErrorTypes = {
    ENABLED: "ENABLED",
    LEGACY: "LEGACY",
};
exports.TimeUnitsType = {
    DAYS: "days",
    HOURS: "hours",
    MINUTES: "minutes",
    SECONDS: "seconds",
};
class InvalidOAuthFlowException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "InvalidOAuthFlowException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidOAuthFlowException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidOAuthFlowException.prototype);
    }
}
exports.InvalidOAuthFlowException = InvalidOAuthFlowException;
class ScopeDoesNotExistException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "ScopeDoesNotExistException",
            $fault: "client",
            ...opts,
        });
        this.name = "ScopeDoesNotExistException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScopeDoesNotExistException.prototype);
    }
}
exports.ScopeDoesNotExistException = ScopeDoesNotExistException;
class UnsupportedIdentityProviderException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedIdentityProviderException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedIdentityProviderException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedIdentityProviderException.prototype);
    }
}
exports.UnsupportedIdentityProviderException = UnsupportedIdentityProviderException;
exports.CompromisedCredentialsEventActionType = {
    BLOCK: "BLOCK",
    NO_ACTION: "NO_ACTION",
};
exports.EventFilterType = {
    PASSWORD_CHANGE: "PASSWORD_CHANGE",
    SIGN_IN: "SIGN_IN",
    SIGN_UP: "SIGN_UP",
};
exports.DomainStatusType = {
    ACTIVE: "ACTIVE",
    CREATING: "CREATING",
    DELETING: "DELETING",
    FAILED: "FAILED",
    UPDATING: "UPDATING",
};
exports.EventSourceName = {
    USER_NOTIFICATION: "userNotification",
};
exports.LogLevel = {
    ERROR: "ERROR",
};
class UnauthorizedException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
exports.UnauthorizedException = UnauthorizedException;
class UnsupportedOperationException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedOperationException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);
    }
}
exports.UnsupportedOperationException = UnsupportedOperationException;
class UnsupportedTokenTypeException extends CognitoIdentityProviderServiceException_1.CognitoIdentityProviderServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedTokenTypeException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedTokenTypeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedTokenTypeException.prototype);
    }
}
exports.UnsupportedTokenTypeException = UnsupportedTokenTypeException;
const AdminAddUserToGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminAddUserToGroupRequestFilterSensitiveLog = AdminAddUserToGroupRequestFilterSensitiveLog;
const AdminConfirmSignUpRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminConfirmSignUpRequestFilterSensitiveLog = AdminConfirmSignUpRequestFilterSensitiveLog;
const AttributeTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: smithy_client_1.SENSITIVE_STRING }),
});
exports.AttributeTypeFilterSensitiveLog = AttributeTypeFilterSensitiveLog;
const AdminCreateUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserAttributes && {
        UserAttributes: obj.UserAttributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
    ...(obj.ValidationData && {
        ValidationData: obj.ValidationData.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
    ...(obj.TemporaryPassword && { TemporaryPassword: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminCreateUserRequestFilterSensitiveLog = AdminCreateUserRequestFilterSensitiveLog;
const UserTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Attributes && { Attributes: obj.Attributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)) }),
});
exports.UserTypeFilterSensitiveLog = UserTypeFilterSensitiveLog;
const AdminCreateUserResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.User && { User: (0, exports.UserTypeFilterSensitiveLog)(obj.User) }),
});
exports.AdminCreateUserResponseFilterSensitiveLog = AdminCreateUserResponseFilterSensitiveLog;
const AdminDeleteUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminDeleteUserRequestFilterSensitiveLog = AdminDeleteUserRequestFilterSensitiveLog;
const AdminDeleteUserAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminDeleteUserAttributesRequestFilterSensitiveLog = AdminDeleteUserAttributesRequestFilterSensitiveLog;
const AdminDisableUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminDisableUserRequestFilterSensitiveLog = AdminDisableUserRequestFilterSensitiveLog;
const AdminEnableUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminEnableUserRequestFilterSensitiveLog = AdminEnableUserRequestFilterSensitiveLog;
const AdminForgetDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminForgetDeviceRequestFilterSensitiveLog = AdminForgetDeviceRequestFilterSensitiveLog;
const AdminGetDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminGetDeviceRequestFilterSensitiveLog = AdminGetDeviceRequestFilterSensitiveLog;
const DeviceTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DeviceAttributes && {
        DeviceAttributes: obj.DeviceAttributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
});
exports.DeviceTypeFilterSensitiveLog = DeviceTypeFilterSensitiveLog;
const AdminGetDeviceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Device && { Device: (0, exports.DeviceTypeFilterSensitiveLog)(obj.Device) }),
});
exports.AdminGetDeviceResponseFilterSensitiveLog = AdminGetDeviceResponseFilterSensitiveLog;
const AdminGetUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminGetUserRequestFilterSensitiveLog = AdminGetUserRequestFilterSensitiveLog;
const AdminGetUserResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserAttributes && {
        UserAttributes: obj.UserAttributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
});
exports.AdminGetUserResponseFilterSensitiveLog = AdminGetUserResponseFilterSensitiveLog;
const AdminInitiateAuthRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AuthParameters && { AuthParameters: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminInitiateAuthRequestFilterSensitiveLog = AdminInitiateAuthRequestFilterSensitiveLog;
const AuthenticationResultTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.RefreshToken && { RefreshToken: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.IdToken && { IdToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.AuthenticationResultTypeFilterSensitiveLog = AuthenticationResultTypeFilterSensitiveLog;
const AdminInitiateAuthResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AuthenticationResult && {
        AuthenticationResult: (0, exports.AuthenticationResultTypeFilterSensitiveLog)(obj.AuthenticationResult),
    }),
});
exports.AdminInitiateAuthResponseFilterSensitiveLog = AdminInitiateAuthResponseFilterSensitiveLog;
const AdminListDevicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminListDevicesRequestFilterSensitiveLog = AdminListDevicesRequestFilterSensitiveLog;
const AdminListDevicesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AdminListDevicesResponseFilterSensitiveLog = AdminListDevicesResponseFilterSensitiveLog;
const AdminListGroupsForUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminListGroupsForUserRequestFilterSensitiveLog = AdminListGroupsForUserRequestFilterSensitiveLog;
const AdminListUserAuthEventsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminListUserAuthEventsRequestFilterSensitiveLog = AdminListUserAuthEventsRequestFilterSensitiveLog;
const AdminRemoveUserFromGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminRemoveUserFromGroupRequestFilterSensitiveLog = AdminRemoveUserFromGroupRequestFilterSensitiveLog;
const AdminResetUserPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminResetUserPasswordRequestFilterSensitiveLog = AdminResetUserPasswordRequestFilterSensitiveLog;
const AdminRespondToAuthChallengeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ChallengeResponses && { ChallengeResponses: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminRespondToAuthChallengeRequestFilterSensitiveLog = AdminRespondToAuthChallengeRequestFilterSensitiveLog;
const AdminRespondToAuthChallengeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AuthenticationResult && {
        AuthenticationResult: (0, exports.AuthenticationResultTypeFilterSensitiveLog)(obj.AuthenticationResult),
    }),
});
exports.AdminRespondToAuthChallengeResponseFilterSensitiveLog = AdminRespondToAuthChallengeResponseFilterSensitiveLog;
const AdminSetUserMFAPreferenceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminSetUserMFAPreferenceRequestFilterSensitiveLog = AdminSetUserMFAPreferenceRequestFilterSensitiveLog;
const AdminSetUserPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Password && { Password: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminSetUserPasswordRequestFilterSensitiveLog = AdminSetUserPasswordRequestFilterSensitiveLog;
const AdminSetUserSettingsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminSetUserSettingsRequestFilterSensitiveLog = AdminSetUserSettingsRequestFilterSensitiveLog;
const AdminUpdateAuthEventFeedbackRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminUpdateAuthEventFeedbackRequestFilterSensitiveLog = AdminUpdateAuthEventFeedbackRequestFilterSensitiveLog;
const AdminUpdateDeviceStatusRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminUpdateDeviceStatusRequestFilterSensitiveLog = AdminUpdateDeviceStatusRequestFilterSensitiveLog;
const AdminUpdateUserAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserAttributes && {
        UserAttributes: obj.UserAttributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
});
exports.AdminUpdateUserAttributesRequestFilterSensitiveLog = AdminUpdateUserAttributesRequestFilterSensitiveLog;
const AdminUserGlobalSignOutRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.AdminUserGlobalSignOutRequestFilterSensitiveLog = AdminUserGlobalSignOutRequestFilterSensitiveLog;
const AssociateSoftwareTokenRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
});
exports.AssociateSoftwareTokenRequestFilterSensitiveLog = AssociateSoftwareTokenRequestFilterSensitiveLog;
const AssociateSoftwareTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.SecretCode && { SecretCode: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
});
exports.AssociateSoftwareTokenResponseFilterSensitiveLog = AssociateSoftwareTokenResponseFilterSensitiveLog;
const ChangePasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PreviousPassword && { PreviousPassword: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ProposedPassword && { ProposedPassword: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.ChangePasswordRequestFilterSensitiveLog = ChangePasswordRequestFilterSensitiveLog;
const ConfirmDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.ConfirmDeviceRequestFilterSensitiveLog = ConfirmDeviceRequestFilterSensitiveLog;
const UserContextDataTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UserContextDataTypeFilterSensitiveLog = UserContextDataTypeFilterSensitiveLog;
const ConfirmForgotPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretHash && { SecretHash: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Password && { Password: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
});
exports.ConfirmForgotPasswordRequestFilterSensitiveLog = ConfirmForgotPasswordRequestFilterSensitiveLog;
const ConfirmSignUpRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretHash && { SecretHash: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
});
exports.ConfirmSignUpRequestFilterSensitiveLog = ConfirmSignUpRequestFilterSensitiveLog;
const UserPoolClientTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientSecret && { ClientSecret: smithy_client_1.SENSITIVE_STRING }),
});
exports.UserPoolClientTypeFilterSensitiveLog = UserPoolClientTypeFilterSensitiveLog;
const CreateUserPoolClientResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserPoolClient && { UserPoolClient: (0, exports.UserPoolClientTypeFilterSensitiveLog)(obj.UserPoolClient) }),
});
exports.CreateUserPoolClientResponseFilterSensitiveLog = CreateUserPoolClientResponseFilterSensitiveLog;
const DeleteUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.DeleteUserRequestFilterSensitiveLog = DeleteUserRequestFilterSensitiveLog;
const DeleteUserAttributesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.DeleteUserAttributesRequestFilterSensitiveLog = DeleteUserAttributesRequestFilterSensitiveLog;
const DeleteUserPoolClientRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.DeleteUserPoolClientRequestFilterSensitiveLog = DeleteUserPoolClientRequestFilterSensitiveLog;
const DescribeRiskConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.DescribeRiskConfigurationRequestFilterSensitiveLog = DescribeRiskConfigurationRequestFilterSensitiveLog;
const RiskConfigurationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.RiskConfigurationTypeFilterSensitiveLog = RiskConfigurationTypeFilterSensitiveLog;
const DescribeRiskConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RiskConfiguration && { RiskConfiguration: (0, exports.RiskConfigurationTypeFilterSensitiveLog)(obj.RiskConfiguration) }),
});
exports.DescribeRiskConfigurationResponseFilterSensitiveLog = DescribeRiskConfigurationResponseFilterSensitiveLog;
const DescribeUserPoolClientRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.DescribeUserPoolClientRequestFilterSensitiveLog = DescribeUserPoolClientRequestFilterSensitiveLog;
const DescribeUserPoolClientResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserPoolClient && { UserPoolClient: (0, exports.UserPoolClientTypeFilterSensitiveLog)(obj.UserPoolClient) }),
});
exports.DescribeUserPoolClientResponseFilterSensitiveLog = DescribeUserPoolClientResponseFilterSensitiveLog;
const ForgetDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.ForgetDeviceRequestFilterSensitiveLog = ForgetDeviceRequestFilterSensitiveLog;
const ForgotPasswordRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretHash && { SecretHash: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.ForgotPasswordRequestFilterSensitiveLog = ForgotPasswordRequestFilterSensitiveLog;
const GetDeviceRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetDeviceRequestFilterSensitiveLog = GetDeviceRequestFilterSensitiveLog;
const GetDeviceResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Device && { Device: (0, exports.DeviceTypeFilterSensitiveLog)(obj.Device) }),
});
exports.GetDeviceResponseFilterSensitiveLog = GetDeviceResponseFilterSensitiveLog;
const GetUICustomizationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetUICustomizationRequestFilterSensitiveLog = GetUICustomizationRequestFilterSensitiveLog;
const UICustomizationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.UICustomizationTypeFilterSensitiveLog = UICustomizationTypeFilterSensitiveLog;
const GetUICustomizationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UICustomization && { UICustomization: (0, exports.UICustomizationTypeFilterSensitiveLog)(obj.UICustomization) }),
});
exports.GetUICustomizationResponseFilterSensitiveLog = GetUICustomizationResponseFilterSensitiveLog;
const GetUserRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetUserRequestFilterSensitiveLog = GetUserRequestFilterSensitiveLog;
const GetUserResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserAttributes && {
        UserAttributes: obj.UserAttributes.map((item) => (0, exports.AttributeTypeFilterSensitiveLog)(item)),
    }),
});
exports.GetUserResponseFilterSensitiveLog = GetUserResponseFilterSensitiveLog;
const GetUserAttributeVerificationCodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.GetUserAttributeVerificationCodeRequestFilterSensitiveLog = GetUserAttributeVerificationCodeRequestFilterSensitiveLog;
const GlobalSignOutRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.GlobalSignOutRequestFilterSensitiveLog = GlobalSignOutRequestFilterSensitiveLog;
const InitiateAuthRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AuthParameters && { AuthParameters: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
});
exports.InitiateAuthRequestFilterSensitiveLog = InitiateAuthRequestFilterSensitiveLog;
const InitiateAuthResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AuthenticationResult && {
        AuthenticationResult: (0, exports.AuthenticationResultTypeFilterSensitiveLog)(obj.AuthenticationResult),
    }),
});
exports.InitiateAuthResponseFilterSensitiveLog = InitiateAuthResponseFilterSensitiveLog;
const ListDevicesRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AccessToken && { AccessToken: smithy_client_1.SENSITIVE_STRING }),
});
exports.ListDevicesRequestFilterSensitiveLog = ListDevicesRequestFilterSensitiveLog;
const ListDevicesResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListDevicesResponseFilterSensitiveLog = ListDevicesResponseFilterSensitiveLog;
const UserPoolClientDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.UserPoolClientDescriptionFilterSensitiveLog = UserPoolClientDescriptionFilterSensitiveLog;
const ListUserPoolClientsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UserPoolClients && {
        UserPoolClients: obj.UserPoolClients.map((item) => (0, exports.UserPoolClientDescriptionFilterSensitiveLog)(item)),
    }),
});
exports.ListUserPoolClientsResponseFilterSensitiveLog = ListUserPoolClientsResponseFilterSensitiveLog;
const ListUsersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Users && { Users: obj.Users.map((item) => (0, exports.UserTypeFilterSensitiveLog)(item)) }),
});
exports.ListUsersResponseFilterSensitiveLog = ListUsersResponseFilterSensitiveLog;
const ListUsersInGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Users && { Users: obj.Users.map((item) => (0, exports.UserTypeFilterSensitiveLog)(item)) }),
});
exports.ListUsersInGroupResponseFilterSensitiveLog = ListUsersInGroupResponseFilterSensitiveLog;
const ResendConfirmationCodeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.SecretHash && { SecretHash: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Username && { Username: smithy_client_1.SENSITIVE_STRING }),
});
exports.ResendConfirmationCodeRequestFilterSensitiveLog = ResendConfirmationCodeRequestFilterSensitiveLog;
const RespondToAuthChallengeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ChallengeResponses && { ChallengeResponses: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.UserContextData && { UserContextData: smithy_client_1.SENSITIVE_STRING }),
});
exports.RespondToAuthChallengeRequestFilterSensitiveLog = RespondToAuthChallengeRequestFilterSensitiveLog;
const RespondToAuthChallengeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Session && { Session: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.AuthenticationResult && {
        AuthenticationResult: (0, exports.AuthenticationResultTypeFilterSensitiveLog)(obj.AuthenticationResult),
    }),
});
exports.RespondToAuthChallengeResponseFilterSensitiveLog = RespondToAuthChallengeResponseFilterSensitiveLog;
const RevokeTokenRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Token && { Token: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
    ...(obj.ClientSecret && { ClientSecret: smithy_client_1.SENSITIVE_STRING }),
});
exports.RevokeTokenRequestFilterSensitiveLog = RevokeTokenRequestFilterSensitiveLog;
const SetRiskConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ClientId && { ClientId: smithy_client_1.SENSITIVE_STRING }),
});
exports.SetRiskConfigurationRequestFilterSensitiveLog = SetRiskConfigurationRequestFilterSensitiveLog;
