import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CognitoIdentityProviderClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CognitoIdentityProviderClient";
import {
  GetLogDeliveryConfigurationRequest,
  GetLogDeliveryConfigurationResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface GetLogDeliveryConfigurationCommandInput
  extends GetLogDeliveryConfigurationRequest {}
export interface GetLogDeliveryConfigurationCommandOutput
  extends GetLogDeliveryConfigurationResponse,
    __MetadataBearer {}
export declare class GetLogDeliveryConfigurationCommand extends $Command<
  GetLogDeliveryConfigurationCommandInput,
  GetLogDeliveryConfigurationCommandOutput,
  CognitoIdentityProviderClientResolvedConfig
> {
  readonly input: GetLogDeliveryConfigurationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetLogDeliveryConfigurationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CognitoIdentityProviderClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetLogDeliveryConfigurationCommandInput,
    GetLogDeliveryConfigurationCommandOutput
  >;
  private serialize;
  private deserialize;
}
