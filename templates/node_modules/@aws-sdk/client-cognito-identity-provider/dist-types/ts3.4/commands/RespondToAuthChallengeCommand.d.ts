import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  CognitoIdentityProviderClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../CognitoIdentityProviderClient";
import {
  RespondToAuthChallengeRequest,
  RespondToAuthChallengeResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface RespondToAuthChallengeCommandInput
  extends RespondToAuthChallengeRequest {}
export interface RespondToAuthChallengeCommandOutput
  extends RespondToAuthChallengeResponse,
    __MetadataBearer {}
export declare class RespondToAuthChallengeCommand extends $Command<
  RespondToAuthChallengeCommandInput,
  RespondToAuthChallengeCommandOutput,
  CognitoIdentityProviderClientResolvedConfig
> {
  readonly input: RespondToAuthChallengeCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: RespondToAuthChallengeCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: CognitoIdentityProviderClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    RespondToAuthChallengeCommandInput,
    RespondToAuthChallengeCommandOutput
  >;
  private serialize;
  private deserialize;
}
